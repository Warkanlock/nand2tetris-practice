// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // util
    Inc16(in=outRegister, out=outInc16);

    // calculate the data to load
    Mux16(a=false, b=outInc16, sel=inc, out=incOut); // out[t] + 1
    Mux16(a=incOut, b=in, sel=load, out=loadOut);  // in[t]
    Mux16(a=loadOut, b=false, sel=reset, out=dataToLoad); // 0

    // dataToLoad will be loaded into the register if reset or load is true
    
    // compute simple digit to assess registry
    Or(a=reset, b=load, out=resetOrLoad);
    Or(a=resetOrLoad, b=inc, out=resetOrLoadOrInc);

    Register(in=dataToLoad, load=resetOrLoadOrInc, out=outRegister, out=out);
    //  otherwise, if registers does not have a flag enabled: out[t+1] = out[t]
}
